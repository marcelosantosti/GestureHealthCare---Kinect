<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx" 
		width="100%" 
		height="100%"
		xmlns:components="br.com.facdombosco.gesturehealthcare.view.components.*"
		title="Gesture HealthCare">
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import br.com.facdombosco.gesturehealthcare.event.GestureEvent;
			import br.com.facdombosco.gesturehealthcare.model.gestures.GestureType;
			import br.com.facdombosco.gesturehealthcare.model.presentation.impl.CirurgiaPresentationModel;
			import br.com.facdombosco.gesturehealthcare.model.vo.Cirurgia;
			
			import spark.events.IndexChangeEvent;
			
			[Bindable]
			[Inject]
			public var cirurgiaPresentationModel : CirurgiaPresentationModel;
			
			[Embed("assets/minus_24.png")]
			private var iconeMinus : Class;
			[Embed("assets/plus_24.png")]
			private var iconePlus : Class;
			
			[PostConstruct]
			public function postConstruct() : void
			{
				this.cirurgiaPresentationModel.verCirurgias();
			}
			
			protected function button1_clickHandler(event:MouseEvent):void
			{
				var gestureEvent : br.com.facdombosco.gesturehealthcare.event.GestureEvent = new br.com.facdombosco.gesturehealthcare.event.GestureEvent(br.com.facdombosco.gesturehealthcare.event.GestureEvent.GESTURE_RECOGNISED);
				gestureEvent.gestureType = GestureType.STRECH_LEFT;
				this.cirurgiaPresentationModel.strechLeft(gestureEvent);
			}
			
			protected function button2_clickHandler(event:MouseEvent):void
			{
				var gestureEvent : br.com.facdombosco.gesturehealthcare.event.GestureEvent = new br.com.facdombosco.gesturehealthcare.event.GestureEvent(br.com.facdombosco.gesturehealthcare.event.GestureEvent.GESTURE_RECOGNISED);
				gestureEvent.gestureType = GestureType.STRECH_RIGTH;
				this.cirurgiaPresentationModel.strechRigth(gestureEvent);
			}
			
			protected function listCirurgia_changeHandler(event:IndexChangeEvent):void
			{
				var gestureEvent : br.com.facdombosco.gesturehealthcare.event.GestureEvent = new br.com.facdombosco.gesturehealthcare.event.GestureEvent(br.com.facdombosco.gesturehealthcare.event.GestureEvent.GESTURE_RECOGNISED);
				gestureEvent.gestureType = GestureType.POINT_RIGTH;
				this.cirurgiaPresentationModel.dispatcher.dispatchEvent(gestureEvent);
			}
			
			protected function btnFullScreen_clickHandler(event:MouseEvent):void
			{
				if (stage.displayState == StageDisplayState.NORMAL)
					stage.displayState = StageDisplayState.FULL_SCREEN;
				else
				{
					if (stage.displayState == StageDisplayState.FULL_SCREEN)
						stage.displayState = StageDisplayState.NORMAL;
				}
			}
		]]>
	</fx:Script>
	
	<s:navigationContent>
		<s:Button label="Voltar" click="{this.cirurgiaPresentationModel.voltar()}" />
	</s:navigationContent>
	
	<s:actionContent>
		<s:HGroup gap="5">
			<s:Button id="btnFullScreen" label="Fullscreen" click="btnFullScreen_clickHandler(event)" />
			<s:Button id="btnSair" label="Sair" click="{this.cirurgiaPresentationModel.sair()}" />
		</s:HGroup>
	</s:actionContent>
	
	<s:BorderContainer width="100%" height="100%" borderVisible="false">
		
		<s:Group width="100%" height="100%">
			
			<s:layout>
				<s:VerticalLayout paddingBottom="10" paddingLeft="10" paddingRight="10" paddingTop="10" />
			</s:layout>
			
			<s:BorderContainer width="100%" height="100%" backgroundAlpha="0.0">
				
				<s:layout>
					<s:VerticalLayout />
				</s:layout>
				
				<s:Group width="100%">
					
					<s:Rect width="100%" height="100%">
						<s:fill>
							<s:SolidColor color="#467688" />
						</s:fill>
					</s:Rect>
					
					<s:HGroup width="100%" height="32" verticalAlign="middle" paddingRight="5">
						<s:Label text="Lista de Cirurgias" fontWeight="bold" color="#ffffff" verticalAlign="middle" paddingLeft="10" />
						<s:Spacer width="100%" />
						<s:HGroup>
							<s:Button click="button1_clickHandler(event)" icon="{iconeMinus}" skinClass="spark.skins.mobile.BeveledActionButtonSkin" />
							
							<s:Button click="button2_clickHandler(event)" icon="{iconePlus}" skinClass="spark.skins.mobile.BeveledActionButtonSkin" />
						</s:HGroup>
					</s:HGroup>
				</s:Group>
				
				<s:Group width="100%" height="100%" styleName="Transparente">
					
					<s:layout>
						<s:VerticalLayout paddingBottom="10" paddingLeft="10" paddingRight="10" paddingTop="10" />
					</s:layout>
					
					<s:List
						id="listCirurgia"
						width="100%" 
						height="100%" 
						itemRenderer="br.com.facdombosco.gesturehealthcare.view.itemrenderers.CirurgiaItemRenderer"
						dataProvider="{this.cirurgiaPresentationModel.cirurgiaArrayCollection}"
						selectedIndex="{this.cirurgiaPresentationModel.cirurgiaSelecionada}"
						click="{listCirurgia_changeHandler(null)}"
						styleName="Transparente">
					</s:List>
				</s:Group>
				
			</s:BorderContainer>
			
			<s:HGroup width="100%" height="20%" styleName="Transparente">
				<components:GestureViewerComponent width="100%" height="100%" styleName="Transparente" />
			</s:HGroup>
			
		</s:Group>
	</s:BorderContainer>
	
</s:View>
